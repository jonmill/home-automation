packages:
  ids: !include ./base/ids.yaml
  esp: !include ./base/esp-wroom.yaml

substitutions:
  board_name: nora_room_aq
  board_comment: ESP32 Air Quality Tracker
  board_id: $nora_room_air_quality_board_id
  organic_compounds_sensor_id: $nora_organic_compounds_1_sensor_id
  air_temperature_sensor_id: $nora_air_temperature_1_sensor_id
  air_pressure_sensor_id: $nora_air_pressure_1_sensor_id
  air_humidity_sensor_id: $nora_air_humidity_1_sensor_id

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true
  id: bus_a

sensor:
  - platform: bme680
    address: 0x77
    update_interval: 20min
    iir_filter: 3x
    temperature:
      id: air_temp
      on_value:
        then:
          - lambda: |-
              id(mqtt_event_helper_float)(id(make_sensor_topic)($air_temperature_sensor_id, "air_temperature"), x, "$air_temperature_sensor_id");
    pressure:
      id: air_pressure
      on_value:
        then:
          - lambda: |-
              id(mqtt_event_helper_float)(id(make_sensor_topic)($air_pressure_sensor_id, "air_pressure"), x, "$air_pressure_sensor_id");
    humidity:
      id: air_humidity
      on_value:
        then:
          - lambda: |-
              id(mqtt_event_helper_float)(id(make_sensor_topic)($air_humidity_sensor_id, "air_humidity"), x, "$air_humidity_sensor_id");
    gas_resistance:
      id: gas_resistance
      on_value:
        then:
          - lambda: |-
              id(mqtt_event_helper_float)(id(make_sensor_topic)($organic_compounds_sensor_id, "air_quality"), log(x) + 0.04 * id(air_humidity).state, "$organic_compounds_sensor_id");
  - platform: template
    name: "BME680 Indoor Air Quality"
    id: iaq
    # calculation: comp_gas = log(R_gas[ohm]) + 0.04 log(Ohm)/%rh * hum[%rh]
    lambda: |-
      return log(id(gas_resistance).state) + 0.04 *  id(air_humidity).state;
    state_class: "measurement"
    update_interval: 20min